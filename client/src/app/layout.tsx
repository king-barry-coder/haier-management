// app/layout.tsx

import "./globals.css";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { ThemeProvider } from "@/providers/ThemeProviders";
import StoreProvider from "@/app/redux";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased flex`}>
        <StoreProvider>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            {children}
          </ThemeProvider>
        </StoreProvider>
      </body>
    </html>
  );
}





// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import { SidebarProvider } from "@/components/ui/sidebar";
// import { cookies } from "next/headers";
// import { ThemeProvider } from "@/providers/ThemeProviders";
// import Navbar from "@/components/Navbar";
// import AppSidebar from "@/components/AppSideBar";
// import StoreProvider from "@/app/redux"; // âœ… Redux store provider

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default async function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   const cookieStore = cookies();
//   const defaultOpen = (await cookieStore).get("sidebar_state")?.value === "true";

//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased flex`}>
//         <StoreProvider> {/* Redux available to entire app */}
//           <ThemeProvider
//             attribute="class"
//             defaultTheme="system"
//             enableSystem
//             disableTransitionOnChange
//           >
//             <SidebarProvider defaultOpen={defaultOpen}>
//               <AppSidebar />
//               <main className="w-full">
//                 <Navbar />
//                 <div className="px-4">{children}</div>
//               </main>
//             </SidebarProvider>
//           </ThemeProvider>
//         </StoreProvider>
//       </body>
//     </html>
//   );
// }




// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import { SidebarProvider } from "@/components/ui/sidebar";
// import { cookies } from "next/headers";
// import { ThemeProvider } from "@/providers/ThemeProviders";
// import Navbar from "@/components/Navbar";
// import AppSidebar from "@/components/AppSideBar";




// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default async function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
  
//   const cookieStore = await cookies()
//   const defaultOpen = cookieStore.get("sidebar_state")?.value === "true"

//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased flex`}
//       >
  
//        <ThemeProvider
//             attribute="class"
//             defaultTheme="system"
//             enableSystem
//             disableTransitionOnChange
//        >
            
//             <SidebarProvider defaultOpen={defaultOpen}>
             
//                 {/* {children} */}
//               <AppSidebar/>
//                 <main className=" w-full">
//                   <Navbar/>
//                   <div className="px-4">
//                     {children}
//                   </div>
//                 </main>
//               </SidebarProvider>
            
//          </ThemeProvider>
      

//       </body>
//     </html>
//   );
// }
